{"version":3,"sources":["reportWebVitals.js","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/DirectoryComponent.js","components/CampsiteInfoComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/campsites.js","redux/comments.js","redux/partners.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","state","isNavOpen","isModalOpen","handleLogin","bind","toggleModal","toggleNav","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Jumbotron","fluid","className","Navbar","dark","sticky","expand","NavbarBrand","href","src","height","width","alt","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","color","Component","Footer","role","Loading","baseUrl","RenderDirectoryItem","campsite","Card","CardImg","image","CardImgOverlay","CardTitle","Directory","directory","campsites","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","RenderCampsite","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","campsiteId","comment","text","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","handleSubmit","values","rating","select","model","placeholder","validators","minLength","show","component","messages","textarea","rows","CampsiteInfo","RenderCard","item","Home","campsitesLoading","campsitesErrMess","promotion","promotionLoading","promotionErrMess","partner","partnerLoading","partnerErrMess","required","isNumber","isNaN","validEmail","test","Contact","firstName","lastName","phoneNum","email","agree","contactType","feedback","touched","postFeedback","resetFeedbackForm","Row","md","Col","size","offset","checkbox","RenderPartner","Media","object","body","heading","PartnerList","partners","tag","list","About","CardHeader","title","ADD_CAMPSITES","CAMPSITES_LOADING","CAMPSITES_FAILED","ADD_COMMENTS","COMMENTS_FAILED","ADD_COMMENT","ADD_PROMOTIONS","PROMOTIONS_LOADING","PROMOTIONS_FAILED","ADD_PARTNERS","PARTNERS_LOADING","PARTNERS_FAILED","ActionTypes","campsitesFailed","payload","addCampsites","commentsFailed","addComments","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","response","ok","error","Error","status","statusText","json","catch","console","log","message","promotionsLoading","promotionsFailed","addPromotions","promotions","partnersLoading","partnersFailed","addPartners","mapDispatchToProps","fetchCampsites","actions","reset","fetchComments","fetchPromotions","fetchPartners","Main","TransitionGroup","CSSTransition","classNames","timeout","path","filter","featured","exact","render","match","params","commentsErrMess","location","key","withRouter","connect","Campsites","action","Comments","concat","Partners","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedbackForm","applyMiddleware","thunk","logger","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c916bd7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component }  from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n       \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`);\r\n        this.toggleModal();\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Jumbotron fluid>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <h1>NuCamp</h1>\r\n                                <h2>a better way to camp</h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n                <Navbar dark sticky=\"top\" expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"/assets/images/logo.png\" height=\"30\" width=\"30\" alt=\"NuCamp Logo\" /></NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <i className=\"fa fa-home fa-lg\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/directory\">\r\n                                        <i className=\"fa fa-list fa-lg\" /> Directory\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <i className=\"fa fa-info fa-lg\" /> About\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <i className=\"fa fa-address-card fa-lg\" /> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <span className=\"navbar-text ml-auto\">\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                                </Button>\r\n                            </span>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={input => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={input => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={input => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer className=\"site-footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">             \r\n                    <div className=\"col-4 col-sm-2 offset-1\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/directory'>Directory</Link></li>\r\n                            <li><Link to='/aboutus'>About</Link></li>\r\n                            <li><Link to='/contactus'>Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-3 text-center\">\r\n                        <h5>Social</h5>\r\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>{' '}\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>{' '}\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" /></a> \r\n                    </div>\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:notreal@notreal.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col\">\r\n            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'https://aaronmichael.herokuapp.com/nucamp-data/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderDirectoryItem({campsite}) {\r\n    return (\r\n      \r\n       <Card className=\"zoom\">\r\n            <Link to={`/directory/${campsite.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + campsite.image} alt={campsite.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{campsite.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n            \r\n        </Card>\r\n     \r\n    );\r\n}\r\n\r\nfunction Directory(props) {\r\n\r\n    const directory = props.campsites.campsites.map(campsite => {\r\n        return (\r\n            <div key={campsite.id} className=\"col-md-5 m-1\">\r\n                <RenderDirectoryItem campsite={campsite}/>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.campsites.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.campsites.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4>{props.campsites.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Directory</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <h2>Directory</h2>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {directory}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Directory;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = len => val => !(val) || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n   \r\n\r\nfunction RenderCampsite({campsite}) {\r\nreturn(\r\n    <div className=\"col-md-5 m-1\">\r\n    <FadeTransform\r\n        in\r\n        transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n        <Card className=\"zoom\">\r\n            <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n            <CardBody>\r\n                <CardText>{campsite.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    </FadeTransform>\r\n</div>\r\n\r\n);\r\n}\r\n\r\nfunction RenderComments({comments, postComment, campsiteId}) {\r\n    if (comments) {\r\n        return (\r\n            <div className = \"col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <Stagger in>\r\n                    {\r\n                        comments.map(comment => {\r\n                            return (\r\n                                <Fade in key={comment.id}>\r\n                                    <div>\r\n                                        <p>\r\n                                            {comment.text}<br />\r\n                                            -- {comment.author}, {new Intl.DateTimeFormat\r\n                                            ('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                        </p>\r\n                                    </div>\r\n                                </Fade>\r\n                            );\r\n                        })\r\n                    }\r\n                </Stagger>\r\n                   <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n            </div>\r\n        );\r\n            }\r\n            return(\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(2), \r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"text\">Comment</Label>\r\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CampsiteInfo(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.campsite) {\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <h2>{props.campsite.name}</h2>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <RenderCampsite campsite={props.campsite} />\r\n                <RenderComments\r\n                   comments={props.comments}\r\n                   postComment={props.postComment}\r\n                   campsiteId={props.campsite.id}\r\n                   />\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\nexport default CampsiteInfo;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md m-1\">\r\n                <RenderCard\r\n                        item={props.campsite}\r\n                        isLoading={props.campsitesLoading}\r\n                        errMess={props.campsitesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md m-1\">\r\n                <RenderCard\r\n                        item={props.promotion}\r\n                        isLoading={props.promotionLoading}\r\n                        errMess={props.promotionErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md m-1\">\r\n                    <RenderCard\r\n                      item={props.partner}\r\n                      isLoading={props.partnerLoading}\r\n                      errMess={props.partnerErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    }\r\n    if (errMess) {\r\n        return <h4>{errMess}</h4>;\r\n    }\r\n    return (\r\n        <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(50%)'\r\n            }}>\r\n            <Card className=\"zoom\">\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\n\r\nexport default Home;  ","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n       \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n  \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <h2>Contact Us</h2>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row row-content align-items-center\">\r\n                <div className=\"col-sm-4\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        1 Nucamp Way<br />\r\n                        Seattle, WA 98001<br />\r\n                        U.S.A.\r\n                    </address>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                    <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n            \r\n    );\r\n  }\r\n}\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { Loading } from \"./LoadingComponent\";\nimport { Fade, Stagger } from \"react-animation-components\";\n\nfunction RenderPartner({ partner }) {\n    if (partner) {\n      return (\n        <React.Fragment>\n          <Media\n            object\n            src={baseUrl + partner.image}\n            alt={partner.name}\n            width=\"150\"\n          />\n          <Media body className=\"ml-5 mb-4\">\n            <Media heading>{partner.name}</Media>\n            {partner.description}\n          </Media>\n        </React.Fragment>\n      );\n    }\n    return <div />;\n  }\n  \n  function PartnerList(props) {\n    const partners = props.partners.partners.map((partner) => {\n      return (\n        <Fade in key={partner.id}>\n          <Media tag=\"li\">\n            <RenderPartner partner={partner} />\n          </Media>\n        </Fade>\n      );\n    });\n  \n    if (props.partners.isLoading) {\n      return <Loading />;\n    }\n    if (props.partners.errMess) {\n      return (\n        <div className=\"col\">\n          <h4>{props.partners.errMess}</h4>\n        </div>\n      );\n    }\n    return (\n      <div className=\"col mt-4\">\n        <Media list>\n          <Stagger in>{partners}</Stagger>\n        </Media>\n      </div>\n    );\n  }\n  \n  function About(props) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/home\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>About Us</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>About Us</h2>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-sm-6\">\n            <h3>Our Mission</h3>\n            <p>\n              We present a curated database of the best campsites in the vast\n              woods and backcountry of the World Wide Web Wilderness. We increase\n              access to adventure for the public while promoting safe and\n              respectful use of resources. The expert wilderness trekkers on our\n              staff personally verify each campsite to make sure that they are up\n              to our standards. We also present a platform for campers to share\n              reviews on campsites they have visited with each other.\n            </p>\n          </div>\n          <div className=\"col-sm-6\">\n            <Card>\n              <CardHeader className=\"bg-primary text-white\">\n                <h3>Facts At a Glance</h3>\n              </CardHeader>\n              <CardBody>\n                <dl className=\"row\">\n                  <dt className=\"col-6\">Founded</dt>\n                  <dd className=\"col-6\">February 3, 2016</dd>\n                  <dt className=\"col-6\">No. of Campsites in 2019</dt>\n                  <dd className=\"col-6\">563</dd>\n                  <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                  <dd className=\"col-6\">4388</dd>\n                  <dt className=\"col-6\">Employees</dt>\n                  <dd className=\"col-6\">42</dd>\n                </dl>\n              </CardBody>\n            </Card>\n          </div>\n          <div className=\"col\">\n            <Card className=\"bg-light mt-3\">\n              <CardBody>\n                <blockquote className=\"blockquote\">\n                  <p className=\"mb-0\">\n                    I will not follow where the path may lead, but I will go where\n                    there is no path, and I will leave a trail.\n                  </p>\n                  <footer className=\"blockquote-footer\">\n                    Muriel Strode,{\" \"}\n                    <cite title=\"Source Title\">\n                      \"Wind-Wafted Wild Flowers\" - The Open Court, 1903\n                    </cite>\n                  </footer>\n                </blockquote>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Community Partners</h3>\n          </div>\n          <PartnerList partners={props.partners} />\n        </div>\n      </div>\n    );\n  }\n  \n  export default About;","export const ADD_CAMPSITES = \"ADD_CAMPSITES\";\r\nexport const CAMPSITES_LOADING = \"CAMPSITES_LOADING\";\r\nexport const CAMPSITES_FAILED = \"CAMPSITES_FAILED\";\r\n\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\n\r\nexport const ADD_PROMOTIONS = \"ADD_PROMOTIONS\";\r\nexport const PROMOTIONS_LOADING = \"PROMOTIONS_LOADING\";\r\nexport const PROMOTIONS_FAILED = \"PROMOTIONS_FAILED\";\r\n\r\nexport const ADD_PARTNERS = \"ADD_PARTNERS\";\r\nexport const PARTNERS_LOADING = \"PARTNERS_LOADING\";\r\nexport const PARTNERS_FAILED = \"PARTNERS_FAILED\";\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\nexport const fetchCampsites = () => dispatch => {\r\n    dispatch(campsitesLoading());\r\n\r\n    return fetch(baseUrl + 'campsites')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(campsites => dispatch(addCampsites(campsites)))\r\n        .catch(error => dispatch(campsitesFailed(error.message)));\r\n};\r\n\r\n\r\nexport const campsitesLoading = () => ({\r\n    type: ActionTypes.CAMPSITES_LOADING\r\n});\r\n\r\nexport const campsitesFailed = errMess => ({\r\n    type: ActionTypes.CAMPSITES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addCampsites = campsites => ({\r\n    type: ActionTypes.ADD_CAMPSITES,\r\n    payload: campsites\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errMess => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const addComment = comment => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\r\n    \r\n    const newComment = {\r\n        campsiteId: campsiteId,\r\n        rating: rating,\r\n        author: author,\r\n        text: text\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(newComment),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => { throw error; }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('post comment', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n\r\n\r\nexport const fetchPromotions = () => dispatch => {\r\n    dispatch(promotionsLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(promotions => dispatch(addPromotions(promotions)))\r\n        .catch(error => dispatch(promotionsFailed(error.message)));\r\n};\r\n\r\nexport const promotionsLoading = () => ({\r\n    type: ActionTypes.PROMOTIONS_LOADING\r\n});\r\n\r\nexport const promotionsFailed = errMess => ({\r\n    type: ActionTypes.PROMOTIONS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addPromotions = promotions => ({\r\n    type: ActionTypes.ADD_PROMOTIONS,\r\n    payload: promotions\r\n});\r\n\r\nexport const fetchPartners = () => (dispatch) => {\r\n    dispatch(partnersLoading());\r\n  \r\n    return fetch(baseUrl + \"partners\")\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            const error = new Error(\r\n              `Error ${response.status}: ${response.statusText}`\r\n            );\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        (error) => {\r\n          const errMess = new Error(error.message);\r\n          throw errMess;\r\n        }\r\n      )\r\n      .then((response) => response.json())\r\n      .then((partners) => dispatch(addPartners(partners)))\r\n      .catch((error) => dispatch(partnersFailed(error.message)));\r\n  };\r\n  \r\n  export const partnersLoading = () => ({\r\n    type: ActionTypes.PARTNERS_LOADING,\r\n  });\r\n  \r\n  export const partnersFailed = (errMess) => ({\r\n    type: ActionTypes.PARTNERS_FAILED,\r\n    payload: errMess,\r\n  });\r\n  \r\n  export const addPartners = (partners) => ({\r\n    type: ActionTypes.ADD_PARTNERS,\r\n    payload: partners,\r\n  });\r\n  \r\n  export const postFeedback = (feedback) => () => {\r\n    return fetch(baseUrl + \"feedback\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(feedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            const error = new Error(\r\n              `Error ${response.status}: ${response.statusText}`\r\n            );\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        (error) => {\r\n          throw error;\r\n        }\r\n      )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(\"Feedback: \", response);\r\n        alert(\"Thank you for your feedback!\\n\" + JSON.stringify(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Feedback: \", error.message);\r\n        alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n      });\r\n  };","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Directory from './DirectoryComponent';\r\nimport CampsiteInfo from './CampsiteInfoComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchCampsites, fetchComments, fetchPromotions, fetchPartners } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        campsites: state.campsites,\r\n        comments: state.comments,\r\n        partners: state.partners,\r\n        promotions: state.promotions\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    postComment: (campsiteId, rating, author, text) => (postComment(campsiteId, rating, author, text)),\r\n    postFeedback: (feedback) => postFeedback(feedback),\r\n    fetchCampsites: () => (fetchCampsites()),\r\n    resetFeedbackForm: () => (actions.reset('feedbackForm')),\r\n    fetchComments: () => (fetchComments()),\r\n    fetchPromotions: () => (fetchPromotions()),\r\n    fetchPartners: () => fetchPartners(),\r\n};\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchCampsites();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromotions();\r\n        this.props.fetchPartners();\r\n    }\r\n\r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                campsite={this.props.campsites.campsites.filter(campsite => campsite.featured)[0]}\r\n                campsitesLoading={this.props.campsites.isLoading}\r\n                campsitesErrMess={this.props.campsites.errMess}\r\n                promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\r\n                promotionLoading={this.props.promotions.isLoading}\r\n                promotionErrMess={this.props.promotions.errMess}\r\n                partner={this.props.partners.partners.filter(partner => partner.featured)[0]}\r\n                partnerLoading={this.props.partners.isLoading}\r\n                partnerErrMess={this.props.partners.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const CampsiteWithId = ({match}) => {\r\n            return (\r\n                <CampsiteInfo \r\n                campsite={this.props.campsites.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]}\r\n                isLoading={this.props.campsites.isLoading}\r\n                errMess={this.props.campsites.errMess}\r\n                comments={this.props.comments.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\r\n                commentsErrMess={this.props.comments.errMess}\r\n                postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/directory' render={() => <Directory campsites={this.props.campsites} />} />\r\n                            <Route path='/directory/:campsiteId' component={CampsiteWithId} />\r\n                            <Route exact path='/contactus' render={() =>\r\n                            <Contact postFeedback={this.props.postFeedback} \r\n                             resetFeedbackForm={this.props.resetFeedbackForm} /> } />\r\n                            <Route exact path='/aboutus' render={() => <About partners={this.props.partners} /> } />\r\n                            <Redirect to='/home' />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Campsites = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        campsites: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_CAMPSITES:\r\n            return {...state, isLoading: false, errMess: null, campsites: action.payload};\r\n        case ActionTypes.CAMPSITES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, campsites: []};\r\n        case ActionTypes.CAMPSITES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            const comment = action.payload;\r\n           \r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Partners = (\r\n  state = { isLoading: true, errMess: null, partners: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PARTNERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        partners: action.payload,\r\n      };\r\n\r\n    case ActionTypes.PARTNERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, partners: [] };\r\n\r\n    case ActionTypes.PARTNERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOTIONS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOTIONS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOTIONS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n            \r\n        default:\r\n            return state;\r\n      }\r\n};\r\n","export const InitialFeedback = {\r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Phone',\r\n    feedback: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n          <Provider store={store}>\n          <BrowserRouter>\n              <div className=\"App\">\n                  <Main />\n              </div>\n          </BrowserRouter>\n      </Provider>\n        );\n    };\n}\n\nexport default App;","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Campsites } from './campsites';\r\nimport { Comments } from './comments';\r\nimport { Partners } from './partners';\r\nimport { Promotions } from './promotions';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            campsites: Campsites,\r\n            comments: Comments,\r\n            partners: Partners,\r\n            promotions: Promotions,\r\n            ...createForms({\r\n                feedbackForm: InitialFeedback\r\n            })\r\n        }),       \r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-open-sans';\nimport 'typeface-lobster';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}